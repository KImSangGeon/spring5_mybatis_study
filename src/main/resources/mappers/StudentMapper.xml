<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring5_mybatis_study.mapper.StudentMapper">
		
			<!-- SQL 선언 -->
			<sql id="selectSQL">
					select stud_id, name, email, dob, phone
					from students
			</sql>
			
			<sql id="whereSQL">
				<where>
					<if test="studId != null">
						stud_id = #{studId}
					</if>
				</where>
			</sql>
			
			<select id="selectStudentById" parameterType="Student" resultType="Student">
			<!-- 선언한 SQL로 작성 -->
					<include refid="selectSQL"/>
					<include refid="whereSQL"/>
			</select>
		
			<!-- column은 sql의 컬럼 -->			
			<resultMap type="Student" id="stdResult">
					<id column="stud_id" property="studId" />
					<result column="f" property="phone.countryCode" />
					<result column="m" property="phone.stateCode" />
					<result column="l" property="phone.number" />
			</resultMap>
		
			<select id="selectStudetnByIdWithResultMap" 	parameterType="Student" resultMap="stdResult">
					select stud_id, name, email, dob
						, substring(phone, 1, 3) as f
						, substring(phone, 5, 3) as m
						, substring(phone, 9, 4) as l
					from students
					<include refid="whereSQL"/>
			</select>
			
			<!-- resultType or resultMap 둘 중에 하나만 사용가능 -->
			<select id="selectStudentByAll" resultType="Student">
					<include refid="selectSQL"/>
			</select>
			
			<insert id="insertStudent" parameterType="Student">
					insert into students
						(stud_id, name, email, dob, phone) 
					values
						(#{studId}, #{name}, #{email}, #{dob}, #{phone})
			</insert>
			
			<delete id="deleteStudent">
					delete 
					from students
					<include refid="whereSQL"/>
			</delete>
			
			<update id="updateStudent">
					update students
						 set
						  name=#{name},
						  email =#{email},
						   phone=#{phone}, 
						   dob=#{dob}
					<include refid="whereSQL"/>
			</update>
			
			<select id="selectStudentByAllForHashMap" resultType="map">
				<include refid="selectSQL"/>
			</select>
			
			<resultMap type="Student"  id="StudentResult"   >
				<id property="studId" column="stud_id"/>
				<result property="name" column="name"/>
				<result property="email" column="email"/>
				<result property="phone" column="phone"/>
				<result property="dob" column="dob"/>
			</resultMap>			
			
			<resultMap  id="selectStudentByIdAssociation" type="Student" extends="StudentResult">
				<association property="address"
				 resultMap="spring5_mybatis_study.mapper.AddressMapper.AddressResult"></association>
			</resultMap>
				
			<select id="selectStudentByIdAssociation" resultMap="selectStudentByIdAssociation">
				select stud_id, name, email, phone, dob, 
					a.addr_id, street, city, state, zip, country
				from students s  join addresses a  on s.addr_id =a.addr_id 
				<include refid="whereSQL"/>			
			</select>						
		
			<!-- enum 타입 다루기 -->
			<insert id="insertEnumStudent">
				insert into students
					(stud_id, name, email,phone, dob, gender) 
				values
					(#{studId}, #{name}, #{email}, #{phone}, #{dob}, #{gender})				
			</insert>		
		
			<!-- 조건에 만족하는 내용에 대한 값을 출력 택1 -->
			<sql id="where_name_email">
				<where>
					<if test="name != null">
						name = #{name}
					</if>
					<if test="email != null">
						AND email = #{email}
					</if>
				</where>
			</sql>
		
			<!-- Parameters 받기 -->
			<select id="selectStudentByMap" parameterType="map" resultMap="StudentResult">
				<include refid="selectSQL"/>
				<include refid="where_name_email"/>
			</select>
			
			<select id="selectAllStudentByMap" parameterType="map" resultMap="StudentResult">
				<include refid="selectSQL"/>
				<include refid="where_name_email"/>
			</select>			
			
			
			<!-- ResultSet으로 받기 -->
			<select id="selectStudentForMap" parameterType="int" resultMap="StudentResult">
				<include refid="selectSQL"/>
				<include refid="whereSQL"/>
			</select>
			
</mapper>